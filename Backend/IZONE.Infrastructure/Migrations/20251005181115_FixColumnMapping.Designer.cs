// <auto-generated />
using System;
using IZONE.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IZONE.Infrastructure.Migrations
{
    [DbContext(typeof(IZONEDbContext))]
    [Migration("20251005181115_FixColumnMapping")]
    partial class FixColumnMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IZONE.Core.Models.BaoLuu", b =>
                {
                    b.Property<int>("MaBL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBL"));

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MaDK")
                        .HasColumnType("int");

                    b.Property<int>("MaHV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBaoLuu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaBL");

                    b.HasIndex("MaDK");

                    b.HasIndex("MaHV");

                    b.ToTable("BaoLuu");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.Property<int>("MaBuoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBuoi"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MaGV")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHoc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ThoiGianBatDau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ThoiGianKetThuc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaBuoi");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaLop");

                    b.ToTable("BuoiHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ChiPhi", b =>
                {
                    b.Property<int>("MaCP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCP"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoaiChiPhi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaLop")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayChi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenChiPhi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaCP");

                    b.HasIndex("MaLop");

                    b.ToTable("ChiPhi");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.Property<int>("MaDK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDK"));

                    b.Property<string>("LyDoHuy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LyDoHuy");

                    b.Property<int>("MaHV")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.Property<int>("MaLop")
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayDangKy");

                    b.Property<DateTime?>("NgayHuy")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayHuy");

                    b.Property<string>("TrangThaiDangKy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThaiDangKy");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThaiThanhToan");

                    b.HasKey("MaDK");

                    b.HasIndex("MaHV");

                    b.HasIndex("MaLop");

                    b.ToTable("DangKyLop");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiaDiem", b =>
                {
                    b.Property<int>("MaDD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDD"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DiaChi");

                    b.Property<int?>("SucChua")
                        .HasColumnType("int")
                        .HasColumnName("SucChua");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenCoSo");

                    b.HasKey("MaDD");

                    b.ToTable("DiaDiem");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemDanh", b =>
                {
                    b.Property<int>("MaDD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDD"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MaBuoi")
                        .HasColumnType("int");

                    b.Property<int>("MaHV")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDiemDanh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaDD");

                    b.HasIndex("MaBuoi");

                    b.HasIndex("MaHV");

                    b.ToTable("DiemDanh");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemSo", b =>
                {
                    b.Property<int>("MaDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDiem"));

                    b.Property<decimal>("Diem")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoaiDiem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaBuoi")
                        .HasColumnType("int");

                    b.Property<int>("MaHV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDiem");

                    b.HasIndex("MaBuoi");

                    b.HasIndex("MaHV");

                    b.ToTable("DiemSo");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.Property<int>("MaGV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GiangVienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGV"));

                    b.Property<string>("ChuyenMon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ChuyenMon");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HoTen");

                    b.Property<int?>("MaTK")
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    b.HasKey("MaGV");

                    b.HasIndex("MaTK")
                        .IsUnique()
                        .HasFilter("[TaiKhoanID] IS NOT NULL");

                    b.ToTable("GiangVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.Property<int>("MaHV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHV"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HoTen");

                    b.Property<int?>("MaTK")
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgaySinh");

                    b.Property<string>("SDT")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SDT");

                    b.Property<decimal>("TaiKhoanVi")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TaiKhoanVi");

                    b.HasKey("MaHV");

                    b.HasIndex("MaTK")
                        .IsUnique()
                        .HasFilter("[TaiKhoanID] IS NOT NULL");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.KhoaHoc", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KhoaHocID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<decimal?>("DonGiaTaiLieu")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DonGiaTaiLieu");

                    b.Property<decimal>("HocPhi")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("HocPhi");

                    b.Property<int>("SoBuoi")
                        .HasColumnType("int")
                        .HasColumnName("SoBuoi");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenKhoaHoc");

                    b.HasKey("MaKH");

                    b.ToTable("KhoaHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"));

                    b.Property<string>("CaHoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CaHoc");

                    b.Property<decimal?>("DonGiaBuoiDay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DonGiaBuoiDay");

                    b.Property<int?>("MaDiaDiem")
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    b.Property<int>("MaGV")
                        .HasColumnType("int")
                        .HasColumnName("GiangVienID");

                    b.Property<int>("MaKH")
                        .HasColumnType("int")
                        .HasColumnName("KhoaHocID");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayBatDau");

                    b.Property<string>("NgayHocTrongTuan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NgayHocTrongTuan");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayKetThuc");

                    b.Property<int?>("SucChua")
                        .HasColumnType("int");

                    b.Property<decimal>("ThoiLuongGio")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("ThoiLuongGio");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLop");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaKH");

                    b.ToTable("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.TaiKhoan", b =>
                {
                    b.Property<int>("MaTK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTK"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MatKhau");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VaiTro");

                    b.HasKey("MaTK");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThanhToan", b =>
                {
                    b.Property<int>("MaTT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ThanhToanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTT"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GhiChu");

                    b.Property<int>("MaDK")
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayThanhToan");

                    b.Property<string>("PhuongThuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PhuongThuc");

                    b.Property<string>("Provider")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Provider");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SoTien");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Status");

                    b.Property<string>("TransactionRef")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TransactionRef");

                    b.HasKey("MaTT");

                    b.HasIndex("MaDK");

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThueMatBang", b =>
                {
                    b.Property<int>("MaThue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThue"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("GiaThue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaDD")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaThue");

                    b.HasIndex("MaDD");

                    b.ToTable("ThueMatBang");
                });

            modelBuilder.Entity("IZONE.Core.Models.ViHocVien", b =>
                {
                    b.Property<int>("MaViHV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaViHV"));

                    b.Property<int?>("DangKyID")
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GhiChu");

                    b.Property<string>("LoaiTx")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoaiTx");

                    b.Property<int>("MaHV")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.Property<DateTime>("NgayGiaoDich")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayGiaoDich");

                    b.Property<decimal>("SoDu")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SoDu");

                    b.Property<int?>("ThanhToanID")
                        .HasColumnType("int")
                        .HasColumnName("ThanhToanID");

                    b.HasKey("MaViHV");

                    b.HasIndex("DangKyID");

                    b.HasIndex("MaHV");

                    b.HasIndex("ThanhToanID");

                    b.ToTable("ViHocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.BaoLuu", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany("BaoLuus")
                        .HasForeignKey("MaDK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("BaoLuus")
                        .HasForeignKey("MaHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DangKyLop");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.HasOne("IZONE.Core.Models.GiangVien", "GiangVien")
                        .WithMany("BuoiHocs")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("BuoiHocs")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ChiPhi", b =>
                {
                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("ChiPhis")
                        .HasForeignKey("MaLop");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DangKyLops")
                        .HasForeignKey("MaHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("DangKyLops")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocVien");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemDanh", b =>
                {
                    b.HasOne("IZONE.Core.Models.BuoiHoc", "BuoiHoc")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("MaBuoi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("MaHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuoiHoc");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemSo", b =>
                {
                    b.HasOne("IZONE.Core.Models.BuoiHoc", "BuoiHoc")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaBuoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuoiHoc");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("GiangVien")
                        .HasForeignKey("IZONE.Core.Models.GiangVien", "MaTK")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("HocVien")
                        .HasForeignKey("IZONE.Core.Models.HocVien", "MaTK")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", "DiaDiem")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaDiaDiem")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IZONE.Core.Models.GiangVien", "GiangVien")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("GiangVien");

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThanhToan", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany("ThanhToans")
                        .HasForeignKey("MaDK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangKyLop");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThueMatBang", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", "DiaDiem")
                        .WithMany("ThueMatBangs")
                        .HasForeignKey("MaDD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiem");
                });

            modelBuilder.Entity("IZONE.Core.Models.ViHocVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany()
                        .HasForeignKey("DangKyID");

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("ViHocViens")
                        .HasForeignKey("MaHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.ThanhToan", "ThanhToan")
                        .WithMany()
                        .HasForeignKey("ThanhToanID");

                    b.Navigation("DangKyLop");

                    b.Navigation("HocVien");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.Navigation("DiemDanhs");

                    b.Navigation("DiemSos");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.Navigation("BaoLuus");

                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiaDiem", b =>
                {
                    b.Navigation("LopHocs");

                    b.Navigation("ThueMatBangs");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.Navigation("BuoiHocs");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.Navigation("BaoLuus");

                    b.Navigation("DangKyLops");

                    b.Navigation("DiemDanhs");

                    b.Navigation("DiemSos");

                    b.Navigation("ViHocViens");
                });

            modelBuilder.Entity("IZONE.Core.Models.KhoaHoc", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.Navigation("BuoiHocs");

                    b.Navigation("ChiPhis");

                    b.Navigation("DangKyLops");
                });

            modelBuilder.Entity("IZONE.Core.Models.TaiKhoan", b =>
                {
                    b.Navigation("GiangVien");

                    b.Navigation("HocVien");
                });
#pragma warning restore 612, 618
        }
    }
}
