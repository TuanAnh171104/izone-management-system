// <auto-generated />
using System;
using IZONE.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IZONE.Infrastructure.Migrations
{
    [DbContext(typeof(IZONEDbContext))]
    partial class IZONEDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IZONE.Core.Models.BaoCao", b =>
                {
                    b.Property<int>("BaoCaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaoCaoID"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("KetQua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThamSo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("BaoCaoID");

                    b.ToTable("BaoCaos");
                });

            modelBuilder.Entity("IZONE.Core.Models.BaoLuu", b =>
                {
                    b.Property<int>("BaoLuuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BaoLuuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaoLuuID"));

                    b.Property<int>("DangKyID")
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    b.Property<DateTime?>("HanBaoLuu")
                        .HasColumnType("datetime2")
                        .HasColumnName("HanBaoLuu");

                    b.Property<string>("LyDo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LyDo");

                    b.Property<DateTime>("NgayBaoLuu")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayBaoLuu");

                    b.Property<string>("NguoiDuyet")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NguoiDuyet");

                    b.Property<int>("SoBuoiConLai")
                        .HasColumnType("int")
                        .HasColumnName("SoBuoiConLai");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThai");

                    b.HasKey("BaoLuuID");

                    b.HasIndex("DangKyID");

                    b.ToTable("BaoLuu");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.Property<int>("BuoiHocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuoiHocID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuoiHocID"));

                    b.Property<int?>("DiaDiemID")
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    b.Property<int?>("GiangVienThayTheID")
                        .HasColumnType("int")
                        .HasColumnName("GiangVienThayTheID");

                    b.Property<int>("LopID")
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    b.Property<DateTime>("NgayHoc")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayHoc");

                    b.Property<TimeSpan?>("ThoiGianBatDau")
                        .HasColumnType("time")
                        .HasColumnName("ThoiGianBatDau");

                    b.Property<TimeSpan?>("ThoiGianKetThuc")
                        .HasColumnType("time")
                        .HasColumnName("ThoiGianKetThuc");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThai");

                    b.HasKey("BuoiHocID");

                    b.HasIndex("DiaDiemID");

                    b.HasIndex("GiangVienThayTheID");

                    b.HasIndex("LopID");

                    b.ToTable("BuoiHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ChiPhi", b =>
                {
                    b.Property<int>("ChiPhiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiPhiID"));

                    b.Property<string>("AllocationMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DiaDiemID")
                        .HasColumnType("int");

                    b.Property<int?>("KhoaHocID")
                        .HasColumnType("int");

                    b.Property<string>("LoaiChiPhi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LopID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhatSinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiNhap")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguonChiPhi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguonGoc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Recurring")
                        .HasColumnType("bit");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubLoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThoiGianKy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChiPhiID");

                    b.HasIndex("DiaDiemID");

                    b.HasIndex("KhoaHocID");

                    b.HasIndex("LopID");

                    b.ToTable("ChiPhi");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.Property<int>("DangKyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DangKyID"));

                    b.Property<int>("HocVienID")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.Property<int>("LopID")
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    b.Property<string>("LyDoHuy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LyDoHuy");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayDangKy");

                    b.Property<DateTime?>("NgayHuy")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayHuy");

                    b.Property<string>("TrangThaiDangKy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThaiDangKy");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThaiThanhToan");

                    b.HasKey("DangKyID");

                    b.HasIndex("HocVienID");

                    b.HasIndex("LopID");

                    b.ToTable("DangKyLop");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiaDiem", b =>
                {
                    b.Property<int>("DiaDiemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiaDiemID"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DiaChi");

                    b.Property<int?>("SucChua")
                        .HasColumnType("int")
                        .HasColumnName("SucChua");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenCoSo");

                    b.HasKey("DiaDiemID");

                    b.ToTable("DiaDiem");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemDanh", b =>
                {
                    b.Property<int>("DiemDanhID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiemDanhID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiemDanhID"));

                    b.Property<int>("BuoiHocID")
                        .HasColumnType("int")
                        .HasColumnName("BuoiHocID");

                    b.Property<bool>("CoMat")
                        .HasColumnType("bit")
                        .HasColumnName("CoMat");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GhiChu");

                    b.Property<int>("HocVienID")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.HasKey("DiemDanhID");

                    b.HasIndex("BuoiHocID");

                    b.HasIndex("HocVienID");

                    b.ToTable("DiemDanh");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemSo", b =>
                {
                    b.Property<int>("DiemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiemID"));

                    b.Property<decimal>("Diem")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("Diem");

                    b.Property<int>("HocVienID")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.Property<string>("KetQua")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KetQua");

                    b.Property<string>("LoaiDiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LoaiDiem");

                    b.Property<int>("LopID")
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    b.HasKey("DiemID");

                    b.HasIndex("HocVienID");

                    b.HasIndex("LopID");

                    b.ToTable("DiemSo");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.Property<int>("GiangVienID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GiangVienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiangVienID"));

                    b.Property<string>("ChuyenMon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ChuyenMon");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HoTen");

                    b.Property<int?>("TaiKhoanID")
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    b.HasKey("GiangVienID");

                    b.HasIndex("TaiKhoanID")
                        .IsUnique()
                        .HasFilter("[TaiKhoanID] IS NOT NULL");

                    b.ToTable("GiangVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.Property<int>("HocVienID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HocVienID"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HoTen");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgaySinh");

                    b.Property<string>("SDT")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SDT");

                    b.Property<int?>("TaiKhoanID")
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    b.Property<decimal>("TaiKhoanVi")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TaiKhoanVi");

                    b.HasKey("HocVienID");

                    b.HasIndex("TaiKhoanID")
                        .IsUnique()
                        .HasFilter("[TaiKhoanID] IS NOT NULL");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.KhoaHoc", b =>
                {
                    b.Property<int>("KhoaHocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KhoaHocID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoaHocID"));

                    b.Property<decimal>("DonGiaTaiLieu")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DonGiaTaiLieu");

                    b.Property<decimal>("HocPhi")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("HocPhi");

                    b.Property<int>("SoBuoi")
                        .HasColumnType("int")
                        .HasColumnName("SoBuoi");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TenKhoaHoc");

                    b.HasKey("KhoaHocID");

                    b.ToTable("KhoaHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.Property<int>("LopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LopID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LopID"));

                    b.Property<string>("CaHoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CaHoc");

                    b.Property<int?>("DiaDiemID")
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    b.Property<decimal?>("DonGiaBuoiDay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DonGiaBuoiDay");

                    b.Property<int>("GiangVienID")
                        .HasColumnType("int")
                        .HasColumnName("GiangVienID");

                    b.Property<int>("KhoaHocID")
                        .HasColumnType("int")
                        .HasColumnName("KhoaHocID");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayBatDau");

                    b.Property<string>("NgayHocTrongTuan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NgayHocTrongTuan");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayKetThuc");

                    b.Property<int?>("SoLuongToiDa")
                        .HasColumnType("int")
                        .HasColumnName("SoLuongToiDa");

                    b.Property<decimal>("ThoiLuongGio")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("ThoiLuongGio");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrangThai");

                    b.HasKey("LopID");

                    b.HasIndex("DiaDiemID");

                    b.HasIndex("GiangVienID");

                    b.HasIndex("KhoaHocID");

                    b.ToTable("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaiKhoanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MatKhau");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VaiTro");

                    b.HasKey("TaiKhoanID");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThanhToan", b =>
                {
                    b.Property<int>("ThanhToanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThanhToanID"));

                    b.Property<int>("DangKyID")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HocVienID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThuc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionRef")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ThanhToanID");

                    b.HasIndex("DangKyID");

                    b.HasIndex("HocVienID");

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThongBao", b =>
                {
                    b.Property<int>("TBID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TBID"));

                    b.Property<string>("LoaiNguoiNhan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiGui")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NguoiNhanID")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TBID");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThueMatBang", b =>
                {
                    b.Property<int>("ThueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ThueID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThueID"));

                    b.Property<int>("DiaDiemID")
                        .HasColumnType("int")
                        .HasColumnName("DiaDiemID");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GhiChu");

                    b.Property<decimal>("GiaThueThang")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("GiaThueThang");

                    b.Property<DateTime?>("HanHopDong")
                        .HasColumnType("datetime2")
                        .HasColumnName("HanHopDong");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayApDung");

                    b.HasKey("ThueID");

                    b.HasIndex("DiaDiemID");

                    b.ToTable("ThueMatBang");
                });

            modelBuilder.Entity("IZONE.Core.Models.ViHocVien", b =>
                {
                    b.Property<int>("ViID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViID"));

                    b.Property<int?>("DangKyID")
                        .HasColumnType("int")
                        .HasColumnName("DangKyID");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GhiChu");

                    b.Property<int>("HocVienID")
                        .HasColumnType("int")
                        .HasColumnName("HocVienID");

                    b.Property<string>("LoaiTx")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoaiTx");

                    b.Property<DateTime>("NgayGiaoDich")
                        .HasColumnType("datetime2")
                        .HasColumnName("NgayGiaoDich");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SoTien");

                    b.Property<int?>("ThanhToanID")
                        .HasColumnType("int")
                        .HasColumnName("ThanhToanID");

                    b.HasKey("ViID");

                    b.HasIndex("DangKyID");

                    b.HasIndex("HocVienID");

                    b.HasIndex("ThanhToanID");

                    b.ToTable("ViHocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.BaoLuu", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany("BaoLuus")
                        .HasForeignKey("DangKyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DangKyLop");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", "DiaDiem")
                        .WithMany()
                        .HasForeignKey("DiaDiemID");

                    b.HasOne("IZONE.Core.Models.GiangVien", "GiangVienThayThe")
                        .WithMany("BuoiHocs")
                        .HasForeignKey("GiangVienThayTheID");

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("BuoiHocs")
                        .HasForeignKey("LopID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("GiangVienThayThe");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ChiPhi", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", "DiaDiem")
                        .WithMany()
                        .HasForeignKey("DiaDiemID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IZONE.Core.Models.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("ChiPhis")
                        .HasForeignKey("LopID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DiaDiem");

                    b.Navigation("KhoaHoc");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DangKyLops")
                        .HasForeignKey("HocVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany("DangKyLops")
                        .HasForeignKey("LopID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocVien");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemDanh", b =>
                {
                    b.HasOne("IZONE.Core.Models.BuoiHoc", "BuoiHoc")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("BuoiHocID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("HocVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuoiHoc");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiemSo", b =>
                {
                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("DiemSos")
                        .HasForeignKey("HocVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.LopHoc", "LopHoc")
                        .WithMany()
                        .HasForeignKey("LopID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocVien");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("GiangVien")
                        .HasForeignKey("IZONE.Core.Models.GiangVien", "TaiKhoanID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("HocVien")
                        .HasForeignKey("IZONE.Core.Models.HocVien", "TaiKhoanID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", "DiaDiem")
                        .WithMany("LopHocs")
                        .HasForeignKey("DiaDiemID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IZONE.Core.Models.GiangVien", "GiangVien")
                        .WithMany("LopHocs")
                        .HasForeignKey("GiangVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("LopHocs")
                        .HasForeignKey("KhoaHocID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("GiangVien");

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThanhToan", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany("ThanhToans")
                        .HasForeignKey("DangKyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("ThanhToans")
                        .HasForeignKey("HocVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DangKyLop");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThueMatBang", b =>
                {
                    b.HasOne("IZONE.Core.Models.DiaDiem", null)
                        .WithMany("ThueMatBangs")
                        .HasForeignKey("DiaDiemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IZONE.Core.Models.ViHocVien", b =>
                {
                    b.HasOne("IZONE.Core.Models.DangKyLop", "DangKyLop")
                        .WithMany()
                        .HasForeignKey("DangKyID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("IZONE.Core.Models.HocVien", "HocVien")
                        .WithMany("ViHocViens")
                        .HasForeignKey("HocVienID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IZONE.Core.Models.ThanhToan", "ThanhToan")
                        .WithMany("ViHocViens")
                        .HasForeignKey("ThanhToanID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DangKyLop");

                    b.Navigation("HocVien");

                    b.Navigation("ThanhToan");
                });

            modelBuilder.Entity("IZONE.Core.Models.BuoiHoc", b =>
                {
                    b.Navigation("DiemDanhs");
                });

            modelBuilder.Entity("IZONE.Core.Models.DangKyLop", b =>
                {
                    b.Navigation("BaoLuus");

                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("IZONE.Core.Models.DiaDiem", b =>
                {
                    b.Navigation("LopHocs");

                    b.Navigation("ThueMatBangs");
                });

            modelBuilder.Entity("IZONE.Core.Models.GiangVien", b =>
                {
                    b.Navigation("BuoiHocs");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("IZONE.Core.Models.HocVien", b =>
                {
                    b.Navigation("DangKyLops");

                    b.Navigation("DiemDanhs");

                    b.Navigation("DiemSos");

                    b.Navigation("ThanhToans");

                    b.Navigation("ViHocViens");
                });

            modelBuilder.Entity("IZONE.Core.Models.KhoaHoc", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("IZONE.Core.Models.LopHoc", b =>
                {
                    b.Navigation("BuoiHocs");

                    b.Navigation("ChiPhis");

                    b.Navigation("DangKyLops");
                });

            modelBuilder.Entity("IZONE.Core.Models.TaiKhoan", b =>
                {
                    b.Navigation("GiangVien");

                    b.Navigation("HocVien");
                });

            modelBuilder.Entity("IZONE.Core.Models.ThanhToan", b =>
                {
                    b.Navigation("ViHocViens");
                });
#pragma warning restore 612, 618
        }
    }
}
